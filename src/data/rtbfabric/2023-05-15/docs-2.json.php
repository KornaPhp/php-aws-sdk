<?php
// This file was auto-generated from sdk-root/src/data/rtbfabric/2023-05-15/docs-2.json
return [ 'version' => '2.0', 'service' => '<p>Amazon Web Services RTB Fabric provides secure, low-latency infrastructure for connecting real-time bidding (RTB) applications. Rather than hosting applications directly, RTB Fabric acts as the connecting fabric that enables your applications to communicate efficiently over private networks instead of the public internet. You maintain complete control over your applications, data, and bidding decisions, while RTB Fabric provides the underlying infrastructure for secure, reliable connectivity.</p> <p>You can use these APIs to complete RTB Fabric tasks, such as setting up audit log ingestions or viewing user access. For more information about RTB Fabric, including the required permissions to use the service, see the <a href="https://docs.aws.amazon.com/rtb-fabric/latest/userguide/">Amazon Web Services RTB Fabric User Guide</a>.</p>', 'operations' => [ 'AcceptLink' => '<p>Accepts a link request between RTB applications.</p> <p>When a requester RTB application requests to link with a responder RTB application, the responder can use this operation to accept the link request and establish the connection.</p>', 'CreateInboundExternalLink' => '<p>Creates an inbound external link.</p>', 'CreateLink' => '<p>Creates a new link between RTB applications.</p> <p>Establishes a connection that allows RTB applications to communicate and exchange bid requests and responses.</p>', 'CreateOutboundExternalLink' => '<p>Creates an outbound external link.</p>', 'CreateRequesterGateway' => '<p>Creates a requester gateway.</p>', 'CreateResponderGateway' => '<p>Creates a responder gateway.</p>', 'DeleteInboundExternalLink' => '<p>Deletes an inbound external link.</p>', 'DeleteLink' => '<p>Deletes a link between RTB applications.</p> <p>Permanently removes the connection between RTB applications. This action cannot be undone.</p>', 'DeleteOutboundExternalLink' => '<p>Deletes an outbound external link.</p>', 'DeleteRequesterGateway' => '<p>Deletes a requester gateway.</p>', 'DeleteResponderGateway' => '<p>Deletes a responder gateway.</p>', 'GetInboundExternalLink' => '<p>Retrieves information about an inbound external link.</p>', 'GetLink' => '<p>Retrieves information about a link between RTB applications.</p> <p>Returns detailed information about the link configuration, status, and associated RTB applications.</p>', 'GetOutboundExternalLink' => '<p>Retrieves information about an outbound external link.</p>', 'GetRequesterGateway' => '<p>Retrieves information about a requester gateway.</p>', 'GetResponderGateway' => '<p>Retrieves information about a responder gateway.</p>', 'ListLinks' => '<p>Lists links associated with an RTB application.</p> <p>Returns a list of all links for the specified RTB application, including their status and configuration details.</p>', 'ListRequesterGateways' => '<p>Lists requester gateways.</p>', 'ListResponderGateways' => '<p>Lists reponder gateways.</p>', 'ListTagsForResource' => '<p>Lists tags for a resource.</p>', 'RejectLink' => '<p>Rejects a link request between RTB applications.</p> <p>When a requester RTB application requests to link with a responder RTB application, the responder can use this operation to decline the link request.</p>', 'TagResource' => '<p>Assigns one or more tags (key-value pairs) to the specified resource.</p>', 'UntagResource' => '<p>Removes a tag or tags from a resource.</p>', 'UpdateLink' => '<p>Updates the configuration of a link between RTB applications.</p> <p>Allows you to modify settings and parameters for an existing link.</p>', 'UpdateLinkModuleFlow' => '<p>Updates a link module flow.</p>', 'UpdateRequesterGateway' => '<p>Updates a requester gateway.</p>', 'UpdateResponderGateway' => '<p>Updates a responder gateway.</p>', ], 'shapes' => [ 'AcceptLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'AcceptLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'AccessDeniedException' => [ 'base' => '<p>The request could not be completed because you do not have sufficient access to perform this action.</p>', 'refs' => [], ], 'Action' => [ 'base' => '<p>Describes a bid action.</p>', 'refs' => [ 'OpenRtbAttributeModuleParameters$action' => '<p>Describes a bid action.</p>', ], ], 'AutoScalingGroupName' => [ 'base' => NULL, 'refs' => [ 'AutoScalingGroupNameList$member' => NULL, ], ], 'AutoScalingGroupNameList' => [ 'base' => NULL, 'refs' => [ 'AutoScalingGroupsConfiguration$autoScalingGroupNames' => '<p>The names of the auto scaling group.</p>', ], ], 'AutoScalingGroupsConfiguration' => [ 'base' => '<p>Describes the configuration of an auto scaling group.</p>', 'refs' => [ 'ManagedEndpointConfiguration$autoScalingGroups' => '<p>Describes the configuration of an auto scaling group.</p>', ], ], 'Base64EncodedCertificateChain' => [ 'base' => NULL, 'refs' => [ 'CertificateAuthorityCertificates$member' => NULL, 'EksEndpointsConfiguration$clusterApiServerCaCertificateChain' => '<p>The CA certificate chain of the cluster API server.</p>', ], ], 'Boolean' => [ 'base' => NULL, 'refs' => [ 'CreateLinkRequest$httpResponderAllowed' => '<p>Boolean to specify if an HTTP responder is allowed.</p>', ], ], 'CertificateAuthorityCertificates' => [ 'base' => NULL, 'refs' => [ 'TrustStoreConfiguration$certificateAuthorityCertificates' => '<p>The certificate authority certificate.</p>', ], ], 'ConflictException' => [ 'base' => '<p>The request could not be completed because of a conflict in the current state of the resource.</p>', 'refs' => [], ], 'CreateInboundExternalLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateInboundExternalLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateLinkResponseCustomerProvidedIdString' => [ 'base' => NULL, 'refs' => [ 'CreateLinkResponse$customerProvidedId' => '<p>The customer-provided unique identifier of the link.</p>', ], ], 'CreateOutboundExternalLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateOutboundExternalLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateRequesterGatewayRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateRequesterGatewayRequestDescriptionString' => [ 'base' => NULL, 'refs' => [ 'CreateRequesterGatewayRequest$description' => '<p>An optional description for the requester gateway.</p>', ], ], 'CreateRequesterGatewayRequestSecurityGroupIdsList' => [ 'base' => NULL, 'refs' => [ 'CreateRequesterGatewayRequest$securityGroupIds' => '<p>The unique identifiers of the security groups.</p>', ], ], 'CreateRequesterGatewayRequestSubnetIdsList' => [ 'base' => NULL, 'refs' => [ 'CreateRequesterGatewayRequest$subnetIds' => '<p>The unique identifiers of the subnets.</p>', ], ], 'CreateRequesterGatewayResponse' => [ 'base' => NULL, 'refs' => [], ], 'CreateResponderGatewayRequest' => [ 'base' => NULL, 'refs' => [], ], 'CreateResponderGatewayRequestDescriptionString' => [ 'base' => NULL, 'refs' => [ 'CreateResponderGatewayRequest$description' => '<p>An optional description for the responder gateway.</p>', ], ], 'CreateResponderGatewayRequestPortInteger' => [ 'base' => NULL, 'refs' => [ 'CreateResponderGatewayRequest$port' => '<p>The networking port to use.</p>', ], ], 'CreateResponderGatewayRequestSecurityGroupIdsList' => [ 'base' => NULL, 'refs' => [ 'CreateResponderGatewayRequest$securityGroupIds' => '<p>The unique identifiers of the security groups.</p>', ], ], 'CreateResponderGatewayRequestSubnetIdsList' => [ 'base' => NULL, 'refs' => [ 'CreateResponderGatewayRequest$subnetIds' => '<p>The unique identifiers of the subnets.</p>', ], ], 'CreateResponderGatewayResponse' => [ 'base' => NULL, 'refs' => [], ], 'CustomerProvidedId' => [ 'base' => NULL, 'refs' => [ 'LinkAttributes$customerProvidedId' => '<p>The customer-provided unique identifier of the link.</p>', ], ], 'DeleteInboundExternalLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteInboundExternalLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteOutboundExternalLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteOutboundExternalLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteRequesterGatewayRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteRequesterGatewayResponse' => [ 'base' => NULL, 'refs' => [], ], 'DeleteResponderGatewayRequest' => [ 'base' => NULL, 'refs' => [], ], 'DeleteResponderGatewayResponse' => [ 'base' => NULL, 'refs' => [], ], 'DomainName' => [ 'base' => NULL, 'refs' => [ 'CreateInboundExternalLinkResponse$domainName' => '<p>The domain name.</p>', 'CreateRequesterGatewayResponse$domainName' => '<p>The domain name of the requester gateway.</p>', 'CreateResponderGatewayRequest$domainName' => '<p>The domain name for the responder gateway.</p>', 'GetInboundExternalLinkResponse$domainName' => '<p>The domain name.</p>', 'GetRequesterGatewayResponse$domainName' => '<p>The domain name of the requester gateway.</p>', 'GetResponderGatewayResponse$domainName' => '<p>The domain name of the responder gateway.</p>', 'UpdateResponderGatewayRequest$domainName' => '<p>The domain name for the responder gateway.</p>', ], ], 'EksEndpointsConfiguration' => [ 'base' => '<p>Describes the configuration of an Amazon Elastic Kubernetes Service endpoint.</p>', 'refs' => [ 'ManagedEndpointConfiguration$eksEndpoints' => '<p>Describes the configuration of an Amazon Elastic Kubernetes Service endpoint.</p>', ], ], 'Filter' => [ 'base' => '<p>Describes the configuration of a filter.</p>', 'refs' => [ 'FilterConfiguration$member' => NULL, ], ], 'FilterConfiguration' => [ 'base' => NULL, 'refs' => [ 'OpenRtbAttributeModuleParameters$filterConfiguration' => '<p>Describes the configuration of a filter.</p>', ], ], 'FilterCriteria' => [ 'base' => NULL, 'refs' => [ 'Filter$criteria' => '<p>Describes the criteria for a filter.</p>', ], ], 'FilterCriterion' => [ 'base' => '<p>Describes the criteria for a filter.</p>', 'refs' => [ 'FilterCriteria$member' => NULL, ], ], 'FilterCriterionValuesList' => [ 'base' => NULL, 'refs' => [ 'FilterCriterion$values' => '<p>The value to filter.</p>', ], ], 'FilterType' => [ 'base' => NULL, 'refs' => [ 'OpenRtbAttributeModuleParameters$filterType' => '<p>The filter type.</p>', ], ], 'FlowModuleName' => [ 'base' => NULL, 'refs' => [ 'FlowModuleNameList$member' => NULL, 'ModuleConfiguration$name' => '<p>The name of the module.</p>', ], ], 'FlowModuleNameList' => [ 'base' => NULL, 'refs' => [ 'ModuleConfiguration$dependsOn' => '<p>The dependencies of the module.</p>', ], ], 'GatewayId' => [ 'base' => NULL, 'refs' => [ 'AcceptLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'AcceptLinkResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'AcceptLinkResponse$peerGatewayId' => '<p>The unique identifier of the peer gateway.</p>', 'CreateInboundExternalLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'CreateInboundExternalLinkResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'CreateLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'CreateLinkRequest$peerGatewayId' => '<p>The unique identifier of the peer gateway.</p>', 'CreateLinkResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'CreateLinkResponse$peerGatewayId' => '<p>The unique identifier of the peer gateway.</p>', 'CreateOutboundExternalLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'CreateOutboundExternalLinkResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'CreateRequesterGatewayResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'CreateResponderGatewayResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'DeleteInboundExternalLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'DeleteLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'DeleteOutboundExternalLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'DeleteRequesterGatewayRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'DeleteRequesterGatewayResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'DeleteResponderGatewayRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'DeleteResponderGatewayResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'GatewayIdList$member' => NULL, 'GetInboundExternalLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'GetInboundExternalLinkResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'GetLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'GetLinkResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'GetLinkResponse$peerGatewayId' => '<p>The unique identifier of the peer gateway.</p>', 'GetOutboundExternalLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'GetOutboundExternalLinkResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'GetRequesterGatewayRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'GetRequesterGatewayResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'GetResponderGatewayRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'GetResponderGatewayResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'ListLinksRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'ListLinksResponseStructure$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'ListLinksResponseStructure$peerGatewayId' => '<p>The unique identifier of the peer gateway.</p>', 'RejectLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'RejectLinkResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'RejectLinkResponse$peerGatewayId' => '<p>The unique identifier of the peer gateway.</p>', 'UpdateLinkModuleFlowRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'UpdateLinkModuleFlowResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'UpdateLinkRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'UpdateRequesterGatewayRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'UpdateRequesterGatewayResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'UpdateResponderGatewayRequest$gatewayId' => '<p>The unique identifier of the gateway.</p>', 'UpdateResponderGatewayResponse$gatewayId' => '<p>The unique identifier of the gateway.</p>', ], ], 'GatewayIdList' => [ 'base' => NULL, 'refs' => [ 'ListRequesterGatewaysResponse$gatewayIds' => '<p>The unique identifier of the gateways.</p>', 'ListResponderGatewaysResponse$gatewayIds' => '<p>The unique identifier of the gateways.</p>', ], ], 'GetInboundExternalLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetInboundExternalLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetOutboundExternalLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetOutboundExternalLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetRequesterGatewayRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetRequesterGatewayResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetRequesterGatewayResponseDescriptionString' => [ 'base' => NULL, 'refs' => [ 'GetRequesterGatewayResponse$description' => '<p>The description of the requester gateway.</p>', ], ], 'GetRequesterGatewayResponseSecurityGroupIdsList' => [ 'base' => NULL, 'refs' => [ 'GetRequesterGatewayResponse$securityGroupIds' => '<p>The unique identifiers of the security groups.</p>', ], ], 'GetRequesterGatewayResponseSubnetIdsList' => [ 'base' => NULL, 'refs' => [ 'GetRequesterGatewayResponse$subnetIds' => '<p>The unique identifiers of the subnets.</p>', ], ], 'GetResponderGatewayRequest' => [ 'base' => NULL, 'refs' => [], ], 'GetResponderGatewayResponse' => [ 'base' => NULL, 'refs' => [], ], 'GetResponderGatewayResponseDescriptionString' => [ 'base' => NULL, 'refs' => [ 'GetResponderGatewayResponse$description' => '<p>The description of the responder gateway.</p>', ], ], 'GetResponderGatewayResponsePortInteger' => [ 'base' => NULL, 'refs' => [ 'GetResponderGatewayResponse$port' => '<p>The networking port.</p>', ], ], 'GetResponderGatewayResponseSecurityGroupIdsList' => [ 'base' => NULL, 'refs' => [ 'GetResponderGatewayResponse$securityGroupIds' => '<p>The unique identifiers of the security groups.</p>', ], ], 'GetResponderGatewayResponseSubnetIdsList' => [ 'base' => NULL, 'refs' => [ 'GetResponderGatewayResponse$subnetIds' => '<p>The unique identifiers of the subnets.</p>', ], ], 'HeaderTagAction' => [ 'base' => '<p>Describes the header tag for a bid action.</p>', 'refs' => [ 'Action$headerTag' => '<p>Describes the header tag for a bid action.</p>', ], ], 'Integer' => [ 'base' => NULL, 'refs' => [ 'GetRequesterGatewayResponse$activeLinksCount' => '<p>The count of active links for the requester gateway.</p>', 'GetRequesterGatewayResponse$totalLinksCount' => '<p>The total count of links for the requester gateway.</p>', 'GetResponderGatewayResponse$activeLinksCount' => '<p>The count of active links for the responder gateway.</p>', 'GetResponderGatewayResponse$totalLinksCount' => '<p>The total count of links for the responder gateway.</p>', 'GetResponderGatewayResponse$inboundLinksCount' => '<p>The count of inbound links for the responder gateway.</p>', 'ListLinksRequest$maxResults' => '<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>', ], ], 'InternalServerException' => [ 'base' => '<p>The request could not be completed because of an internal server error. Try your call again.</p>', 'refs' => [], ], 'KubernetesClusterName' => [ 'base' => NULL, 'refs' => [ 'EksEndpointsConfiguration$clusterName' => '<p>The name of the cluster.</p>', ], ], 'KubernetesEndpointsResourceName' => [ 'base' => NULL, 'refs' => [ 'EksEndpointsConfiguration$endpointsResourceName' => '<p>The name of the endpoint resource.</p>', ], ], 'KubernetesNamespace' => [ 'base' => NULL, 'refs' => [ 'EksEndpointsConfiguration$endpointsResourceNamespace' => '<p>The namespace of the endpoint resource.</p>', ], ], 'LinkApplicationLogConfiguration' => [ 'base' => '<p>Describes the configuration of a link application log.</p>', 'refs' => [ 'LinkLogSettings$applicationLogs' => '<p>Describes the configuration of a link application log.</p>', ], ], 'LinkApplicationLogSampling' => [ 'base' => '<p>Describes a link application log sample.</p>', 'refs' => [ 'LinkApplicationLogConfiguration$sampling' => '<p>Describes a link application log sample.</p>', ], ], 'LinkApplicationLogSamplingErrorLogDouble' => [ 'base' => NULL, 'refs' => [ 'LinkApplicationLogSampling$errorLog' => '<p>An error log entry.</p>', ], ], 'LinkApplicationLogSamplingFilterLogDouble' => [ 'base' => NULL, 'refs' => [ 'LinkApplicationLogSampling$filterLog' => '<p>A filter log entry.</p>', ], ], 'LinkAttributes' => [ 'base' => '<p>Describes the attributes of a link.</p>', 'refs' => [ 'AcceptLinkRequest$attributes' => '<p>Attributes of the link.</p>', 'AcceptLinkResponse$attributes' => '<p>Attributes of the link.</p>', 'CreateInboundExternalLinkRequest$attributes' => '<p>Attributes of the link.</p>', 'CreateLinkRequest$attributes' => '<p>Attributes of the link.</p>', 'CreateLinkResponse$attributes' => '<p>Attributes of the link.</p>', 'GetInboundExternalLinkResponse$attributes' => '<p>Attributes of the link.</p>', 'GetLinkResponse$attributes' => '<p>Attributes of the link.</p>', 'ListLinksResponseStructure$attributes' => '<p>Describes attributes of a link.</p>', 'RejectLinkResponse$attributes' => '<p>Attributes of the link.</p>', ], ], 'LinkDirection' => [ 'base' => NULL, 'refs' => [ 'AcceptLinkResponse$direction' => '<p>The direction of the link.</p>', 'CreateLinkResponse$direction' => '<p>The direction of the link.</p>', 'GetLinkResponse$direction' => '<p>The direction of the link.</p>', 'ListLinksResponseStructure$direction' => '<p>The direction of the link.</p>', 'RejectLinkResponse$direction' => '<p>The direction of the link.</p>', ], ], 'LinkId' => [ 'base' => NULL, 'refs' => [ 'AcceptLinkRequest$linkId' => '<p>The unique identifier of the link.</p>', 'AcceptLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'CreateInboundExternalLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'CreateLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'CreateOutboundExternalLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'DeleteInboundExternalLinkRequest$linkId' => '<p>The unique identifier of the link.</p>', 'DeleteInboundExternalLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'DeleteLinkRequest$linkId' => '<p>The unique identifier of the link.</p>', 'DeleteLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'DeleteOutboundExternalLinkRequest$linkId' => '<p>The unique identifier of the link.</p>', 'DeleteOutboundExternalLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'GetInboundExternalLinkRequest$linkId' => '<p>The unique identifier of the link.</p>', 'GetInboundExternalLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'GetLinkRequest$linkId' => '<p>The unique identifier of the link.</p>', 'GetLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'GetOutboundExternalLinkRequest$linkId' => '<p>The unique identifier of the link.</p>', 'GetOutboundExternalLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'ListLinksResponseStructure$linkId' => '<p>The unique identifier of the link.</p>', 'RejectLinkRequest$linkId' => '<p>The unique identifier of the link.</p>', 'RejectLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', 'UpdateLinkModuleFlowRequest$linkId' => '<p>The unique identifier of the link.</p>', 'UpdateLinkModuleFlowResponse$linkId' => '<p>The unique identifier of the link.</p>', 'UpdateLinkRequest$linkId' => '<p>The unique identifier of the link.</p>', 'UpdateLinkResponse$linkId' => '<p>The unique identifier of the link.</p>', ], ], 'LinkList' => [ 'base' => NULL, 'refs' => [ 'ListLinksResponse$links' => '<p>Information about created links.</p>', ], ], 'LinkLogSettings' => [ 'base' => '<p>Describes the settings for a link log.</p>', 'refs' => [ 'AcceptLinkRequest$logSettings' => '<p>Settings for the application logs.</p>', 'CreateLinkRequest$logSettings' => '<p>Settings for the application logs.</p>', 'GetLinkResponse$logSettings' => '<p>Settings for the application logs.</p>', 'UpdateLinkRequest$logSettings' => '<p>Settings for the application logs.</p>', ], ], 'LinkStatus' => [ 'base' => NULL, 'refs' => [ 'AcceptLinkResponse$status' => '<p>The status of the link.</p>', 'CreateInboundExternalLinkResponse$status' => '<p>The status of the request.</p>', 'CreateLinkResponse$status' => '<p>The status of the request.</p>', 'CreateOutboundExternalLinkResponse$status' => '<p>The status of the request.</p>', 'DeleteInboundExternalLinkResponse$status' => '<p>The status of the request.</p>', 'DeleteLinkResponse$status' => '<p>The status of the link.</p>', 'DeleteOutboundExternalLinkResponse$status' => '<p>The status of the request.</p>', 'GetInboundExternalLinkResponse$status' => '<p>The status of the request.</p>', 'GetLinkResponse$status' => '<p>The status of the link.</p>', 'GetOutboundExternalLinkResponse$status' => '<p>The status of the request.</p>', 'ListLinksResponseStructure$status' => '<p>The status of the link.</p>', 'RejectLinkResponse$status' => '<p>The status of the link.</p>', 'UpdateLinkModuleFlowResponse$status' => '<p>The status of the request.</p>', 'UpdateLinkResponse$status' => '<p>The status of the request.</p>', ], ], 'ListLinksRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListLinksResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListLinksResponseStructure' => [ 'base' => '<p>Describes a link.</p>', 'refs' => [ 'LinkList$member' => NULL, ], ], 'ListRequesterGatewaysRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListRequesterGatewaysRequestMaxResultsInteger' => [ 'base' => NULL, 'refs' => [ 'ListRequesterGatewaysRequest$maxResults' => '<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>', ], ], 'ListRequesterGatewaysResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListResponderGatewaysRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListResponderGatewaysRequestMaxResultsInteger' => [ 'base' => NULL, 'refs' => [ 'ListResponderGatewaysRequest$maxResults' => '<p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>', ], ], 'ListResponderGatewaysResponse' => [ 'base' => NULL, 'refs' => [], ], 'ListTagsForResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'ListTagsForResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'ManagedEndpointConfiguration' => [ 'base' => '<p>Describes the configuration of a managed endpoint.</p>', 'refs' => [ 'CreateResponderGatewayRequest$managedEndpointConfiguration' => '<p>The configuration for the managed endpoint.</p>', 'GetResponderGatewayResponse$managedEndpointConfiguration' => '<p>The configuration of the managed endpoint.</p>', 'UpdateResponderGatewayRequest$managedEndpointConfiguration' => '<p>The configuration for the managed endpoint.</p>', ], ], 'ModuleConfiguration' => [ 'base' => '<p>Describes the configuration of a module.</p>', 'refs' => [ 'ModuleConfigurationList$member' => NULL, ], ], 'ModuleConfigurationList' => [ 'base' => NULL, 'refs' => [ 'AcceptLinkResponse$flowModules' => '<p>The configuration of flow modules.</p>', 'AcceptLinkResponse$pendingFlowModules' => '<p>The configuration of pending flow modules.</p>', 'CreateLinkResponse$flowModules' => '<p>The configuration of flow modules.</p>', 'CreateLinkResponse$pendingFlowModules' => '<p>The configuration of pending flow modules.</p>', 'GetInboundExternalLinkResponse$flowModules' => '<p>The configuration of flow modules.</p>', 'GetInboundExternalLinkResponse$pendingFlowModules' => '<p>The configuration of pending flow modules.</p>', 'GetLinkResponse$flowModules' => '<p>The configuration of flow modules.</p>', 'GetLinkResponse$pendingFlowModules' => '<p>The configuration of pending flow modules.</p>', 'ListLinksResponseStructure$flowModules' => '<p>Describes the configuration of flow modules.</p>', 'ListLinksResponseStructure$pendingFlowModules' => '<p>Describes the configuration of pending flow modules.</p>', 'RejectLinkResponse$flowModules' => '<p>The configuration of flow modules.</p>', 'RejectLinkResponse$pendingFlowModules' => '<p>The configuration of pending flow modules.</p>', 'UpdateLinkModuleFlowRequest$modules' => '<p>The configuration of a module.</p>', ], ], 'ModuleParameters' => [ 'base' => '<p>Describes the parameters of a module.</p>', 'refs' => [ 'ModuleConfiguration$moduleParameters' => '<p>Describes the parameters of a module.</p>', ], ], 'NoBidAction' => [ 'base' => '<p>Describes a no bid action.</p>', 'refs' => [ 'Action$noBid' => '<p>Describes a no bid action.</p>', ], ], 'NoBidActionNoBidReasonCodeInteger' => [ 'base' => NULL, 'refs' => [ 'NoBidAction$noBidReasonCode' => '<p>The reason code for the no bid action.</p>', ], ], 'NoBidModuleParameters' => [ 'base' => '<p>Describes the parameters of a no bid module.</p>', 'refs' => [ 'ModuleParameters$noBid' => '<p>Describes the parameters of a no bid module.</p>', ], ], 'NoBidModuleParametersPassThroughPercentageFloat' => [ 'base' => NULL, 'refs' => [ 'NoBidModuleParameters$passThroughPercentage' => '<p>The pass through percentage.</p>', ], ], 'NoBidModuleParametersReasonCodeInteger' => [ 'base' => NULL, 'refs' => [ 'NoBidModuleParameters$reasonCode' => '<p>The reason code.</p>', ], ], 'NoBidModuleParametersReasonString' => [ 'base' => NULL, 'refs' => [ 'NoBidModuleParameters$reason' => '<p>The reason description.</p>', ], ], 'OpenRtbAttributeModuleParameters' => [ 'base' => '<p>Describes the parameters of an open RTB attribute module.</p>', 'refs' => [ 'ModuleParameters$openRtbAttribute' => '<p>Describes the parameters of an open RTB attribute module.</p>', ], ], 'OpenRtbAttributeModuleParametersHoldbackPercentageFloat' => [ 'base' => NULL, 'refs' => [ 'OpenRtbAttributeModuleParameters$holdbackPercentage' => '<p>The hold back percentage.</p>', ], ], 'Protocol' => [ 'base' => NULL, 'refs' => [ 'CreateResponderGatewayRequest$protocol' => '<p>The networking protocol to use.</p>', 'GetResponderGatewayResponse$protocol' => '<p>The networking protocol.</p>', 'UpdateResponderGatewayRequest$protocol' => '<p>The networking protocol to use.</p>', ], ], 'RejectLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'RejectLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'RequesterGatewayStatus' => [ 'base' => NULL, 'refs' => [ 'CreateRequesterGatewayResponse$status' => '<p>The status of the request.</p>', 'DeleteRequesterGatewayResponse$status' => '<p>The status of the request.</p>', 'GetRequesterGatewayResponse$status' => '<p>The status of the request.</p>', 'UpdateRequesterGatewayResponse$status' => '<p>The status of the request.</p>', ], ], 'ResourceNotFoundException' => [ 'base' => '<p>The request could not be completed because the resource does not exist.</p>', 'refs' => [], ], 'ResponderErrorMasking' => [ 'base' => NULL, 'refs' => [ 'LinkAttributes$responderErrorMasking' => '<p>Describes the masking for HTTP error codes.</p>', ], ], 'ResponderErrorMaskingAction' => [ 'base' => NULL, 'refs' => [ 'ResponderErrorMaskingForHttpCode$action' => '<p>The action for the error..</p>', ], ], 'ResponderErrorMaskingForHttpCode' => [ 'base' => '<p>Describes the masking for HTTP error codes.</p>', 'refs' => [ 'ResponderErrorMasking$member' => NULL, ], ], 'ResponderErrorMaskingForHttpCodeHttpCodeString' => [ 'base' => NULL, 'refs' => [ 'ResponderErrorMaskingForHttpCode$httpCode' => '<p>The HTTP error code.</p>', ], ], 'ResponderErrorMaskingForHttpCodeResponseLoggingPercentageFloat' => [ 'base' => NULL, 'refs' => [ 'ResponderErrorMaskingForHttpCode$responseLoggingPercentage' => '<p>The percentage of response logging.</p>', ], ], 'ResponderErrorMaskingLoggingType' => [ 'base' => NULL, 'refs' => [ 'ResponderErrorMaskingLoggingTypes$member' => NULL, ], ], 'ResponderErrorMaskingLoggingTypes' => [ 'base' => NULL, 'refs' => [ 'ResponderErrorMaskingForHttpCode$loggingTypes' => '<p>The error log type.</p>', ], ], 'ResponderGatewayStatus' => [ 'base' => NULL, 'refs' => [ 'CreateResponderGatewayResponse$status' => '<p>The status of the request.</p>', 'DeleteResponderGatewayResponse$status' => '<p>The status of the request.</p>', 'GetResponderGatewayResponse$status' => '<p>The status of the request.</p>', 'UpdateResponderGatewayResponse$status' => '<p>The status of the request.</p>', ], ], 'RtbTaggableResourceArn' => [ 'base' => NULL, 'refs' => [ 'ListTagsForResourceRequest$resourceArn' => '<p>The Amazon Resource Name (ARN) of the resource for which you want to retrieve tags.</p>', 'TagResourceRequest$resourceArn' => '<p>The Amazon Resource Name (ARN) of the resource that you want to tag.</p>', 'UntagResourceRequest$resourceArn' => '<p>The Amazon Resource Name (ARN) of the resource that you want to untag.</p>', ], ], 'SecurityGroupId' => [ 'base' => NULL, 'refs' => [ 'CreateRequesterGatewayRequestSecurityGroupIdsList$member' => NULL, 'CreateResponderGatewayRequestSecurityGroupIdsList$member' => NULL, 'GetRequesterGatewayResponseSecurityGroupIdsList$member' => NULL, 'GetResponderGatewayResponseSecurityGroupIdsList$member' => NULL, ], ], 'ServiceQuotaExceededException' => [ 'base' => '<p>The request could not be completed because you exceeded a service quota.</p>', 'refs' => [], ], 'String' => [ 'base' => NULL, 'refs' => [ 'AccessDeniedException$message' => NULL, 'AutoScalingGroupsConfiguration$roleArn' => '<p>The role ARN of the auto scaling group.</p>', 'ConflictException$message' => NULL, 'CreateInboundExternalLinkRequest$clientToken' => '<p>The unique client token.</p>', 'CreateOutboundExternalLinkRequest$clientToken' => '<p>The unique client token.</p>', 'CreateRequesterGatewayRequest$clientToken' => '<p>The unique client token.</p>', 'CreateResponderGatewayRequest$clientToken' => '<p>The unique client token.</p>', 'EksEndpointsConfiguration$roleArn' => '<p>The role ARN for the cluster.</p>', 'FilterCriterion$path' => '<p>The path to filter.</p>', 'FilterCriterionValuesList$member' => NULL, 'HeaderTagAction$name' => '<p>The name of the bid action.</p>', 'HeaderTagAction$value' => '<p>The value of the bid action.</p>', 'InternalServerException$message' => NULL, 'ListLinksRequest$nextToken' => '<p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken error</i>.</p>', 'ListLinksResponse$nextToken' => '<p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken error</i>.</p>', 'ListRequesterGatewaysRequest$nextToken' => '<p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken error</i>.</p>', 'ListRequesterGatewaysResponse$nextToken' => '<p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken error</i>.</p>', 'ListResponderGatewaysRequest$nextToken' => '<p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken error</i>.</p>', 'ListResponderGatewaysResponse$nextToken' => '<p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken error</i>.</p>', 'ResourceNotFoundException$message' => NULL, 'ServiceQuotaExceededException$message' => NULL, 'ThrottlingException$message' => NULL, 'UpdateLinkModuleFlowRequest$clientToken' => '<p>The unique client token.</p>', 'UpdateRequesterGatewayRequest$clientToken' => '<p>The unique client token.</p>', 'UpdateResponderGatewayRequest$clientToken' => '<p>The unique client token.</p>', 'ValidationException$message' => NULL, ], ], 'SubnetId' => [ 'base' => NULL, 'refs' => [ 'CreateRequesterGatewayRequestSubnetIdsList$member' => NULL, 'CreateResponderGatewayRequestSubnetIdsList$member' => NULL, 'GetRequesterGatewayResponseSubnetIdsList$member' => NULL, 'GetResponderGatewayResponseSubnetIdsList$member' => NULL, ], ], 'TagKey' => [ 'base' => NULL, 'refs' => [ 'TagKeyList$member' => NULL, 'TagsMap$key' => NULL, ], ], 'TagKeyList' => [ 'base' => NULL, 'refs' => [ 'UntagResourceRequest$tagKeys' => '<p>The keys of the key-value pairs for the tag or tags you want to remove from the specified resource.</p>', ], ], 'TagResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'TagResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'TagValue' => [ 'base' => NULL, 'refs' => [ 'TagsMap$value' => NULL, ], ], 'TagsMap' => [ 'base' => NULL, 'refs' => [ 'CreateInboundExternalLinkRequest$tags' => '<p>A map of the key-value pairs of the tag or tags to assign to the resource.</p>', 'CreateLinkRequest$tags' => '<p>A map of the key-value pairs of the tag or tags to assign to the resource.</p>', 'CreateOutboundExternalLinkRequest$tags' => '<p>A map of the key-value pairs of the tag or tags to assign to the resource.</p>', 'CreateRequesterGatewayRequest$tags' => '<p>A map of the key-value pairs of the tag or tags to assign to the resource.</p>', 'CreateResponderGatewayRequest$tags' => '<p>A map of the key-value pairs of the tag or tags to assign to the resource.</p>', 'GetInboundExternalLinkResponse$tags' => '<p>A map of the key-value pairs for the tag or tags assigned to the specified resource.</p>', 'GetLinkResponse$tags' => '<p>A map of the key-value pairs for the tag or tags assigned to the specified resource.</p>', 'GetOutboundExternalLinkResponse$tags' => '<p>A map of the key-value pairs for the tag or tags assigned to the specified resource.</p>', 'GetRequesterGatewayResponse$tags' => '<p>A map of the key-value pairs for the tag or tags assigned to the specified resource.</p>', 'GetResponderGatewayResponse$tags' => '<p>A map of the key-value pairs for the tag or tags assigned to the specified resource.</p>', 'ListLinksResponseStructure$tags' => '<p>A map of the key-value pairs of the tag or tags to assign to the resource.</p>', 'ListTagsForResourceResponse$tags' => '<p>A map of the key-value pairs for the tag or tags assigned to the specified resource.</p>', 'TagResourceRequest$tags' => '<p>A map of the key-value pairs of the tag or tags to assign to the resource.</p>', ], ], 'ThrottlingException' => [ 'base' => '<p>The request was denied due to request throttling.</p>', 'refs' => [], ], 'Timestamp' => [ 'base' => NULL, 'refs' => [ 'AcceptLinkResponse$createdAt' => '<p>The timestamp of when the link was created.</p>', 'AcceptLinkResponse$updatedAt' => '<p>The timestamp of when the link was updated.</p>', 'CreateLinkResponse$createdAt' => '<p>The timestamp of when the link was created.</p>', 'CreateLinkResponse$updatedAt' => '<p>The timestamp of when the link was updated.</p>', 'GetInboundExternalLinkResponse$createdAt' => '<p>The timestamp of when the inbound external link was created.</p>', 'GetInboundExternalLinkResponse$updatedAt' => '<p>The timestamp of when the inbound external link was updated.</p>', 'GetLinkResponse$createdAt' => '<p>The timestamp of when the link was created.</p>', 'GetLinkResponse$updatedAt' => '<p>The timestamp of when the link was updated.</p>', 'GetOutboundExternalLinkResponse$createdAt' => '<p>The timestamp of when the outbound external link was created.</p>', 'GetOutboundExternalLinkResponse$updatedAt' => '<p>The timestamp of when the outbound external link was updated.</p>', 'GetRequesterGatewayResponse$createdAt' => '<p>The timestamp of when the requester gateway was created.</p>', 'GetRequesterGatewayResponse$updatedAt' => '<p>The timestamp of when the requester gateway was updated.</p>', 'GetResponderGatewayResponse$createdAt' => '<p>The timestamp of when the responder gateway was created.</p>', 'GetResponderGatewayResponse$updatedAt' => '<p>The timestamp of when the responder gateway was updated.</p>', 'ListLinksResponseStructure$createdAt' => '<p>The timestamp of when the link was created.</p>', 'ListLinksResponseStructure$updatedAt' => '<p>The timestamp of when the link was updated.</p>', 'RejectLinkResponse$createdAt' => '<p>The timestamp of when the link was created.</p>', 'RejectLinkResponse$updatedAt' => '<p>The timestamp of when the link was updated.</p>', ], ], 'TrustStoreConfiguration' => [ 'base' => '<p>Describes the configuration of a trust store.</p>', 'refs' => [ 'CreateResponderGatewayRequest$trustStoreConfiguration' => '<p>The configuration of the trust store.</p>', 'GetResponderGatewayResponse$trustStoreConfiguration' => '<p>The configuration of the trust store.</p>', 'UpdateResponderGatewayRequest$trustStoreConfiguration' => '<p>The configuration of the trust store.</p>', ], ], 'URI' => [ 'base' => NULL, 'refs' => [ 'EksEndpointsConfiguration$clusterApiServerEndpointUri' => '<p>The URI of the cluster API server endpoint.</p>', ], ], 'URL' => [ 'base' => NULL, 'refs' => [ 'CreateOutboundExternalLinkRequest$publicEndpoint' => '<p>The public endpoint of the link.</p>', 'GetOutboundExternalLinkResponse$publicEndpoint' => '<p>The public endpoint for the link.</p>', ], ], 'UntagResourceRequest' => [ 'base' => NULL, 'refs' => [], ], 'UntagResourceResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateLinkModuleFlowRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateLinkModuleFlowResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateLinkRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateLinkResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateRequesterGatewayRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateRequesterGatewayRequestDescriptionString' => [ 'base' => NULL, 'refs' => [ 'UpdateRequesterGatewayRequest$description' => '<p>An optional description for the requester gateway.</p>', ], ], 'UpdateRequesterGatewayResponse' => [ 'base' => NULL, 'refs' => [], ], 'UpdateResponderGatewayRequest' => [ 'base' => NULL, 'refs' => [], ], 'UpdateResponderGatewayRequestDescriptionString' => [ 'base' => NULL, 'refs' => [ 'UpdateResponderGatewayRequest$description' => '<p>An optional description for the responder gateway.</p>', ], ], 'UpdateResponderGatewayRequestPortInteger' => [ 'base' => NULL, 'refs' => [ 'UpdateResponderGatewayRequest$port' => '<p>The networking port to use.</p>', ], ], 'UpdateResponderGatewayResponse' => [ 'base' => NULL, 'refs' => [], ], 'ValidationException' => [ 'base' => '<p>The request could not be completed because it fails satisfy the constraints specified by the service.</p>', 'refs' => [], ], 'Version' => [ 'base' => NULL, 'refs' => [ 'ModuleConfiguration$version' => '<p>The version of the module.</p>', ], ], 'VpcId' => [ 'base' => NULL, 'refs' => [ 'CreateRequesterGatewayRequest$vpcId' => '<p>The unique identifier of the Virtual Private Cloud (VPC).</p>', 'CreateResponderGatewayRequest$vpcId' => '<p>The unique identifier of the Virtual Private Cloud (VPC).</p>', 'GetRequesterGatewayResponse$vpcId' => '<p>The unique identifier of the Virtual Private Cloud (VPC).</p>', 'GetResponderGatewayResponse$vpcId' => '<p>The unique identifier of the Virtual Private Cloud (VPC).</p>', ], ], ],];
